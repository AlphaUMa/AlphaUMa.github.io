{"meta":{"title":"Alison's Space","subtitle":null,"description":null,"author":"Alison","url":"http://yoursite.com"},"pages":[{"title":"About","date":"2017-07-18T01:38:18.583Z","updated":"2017-07-18T01:38:18.583Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2017-07-18T01:38:18.583Z","updated":"2017-07-18T01:38:18.583Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2017-07-18T01:38:18.584Z","updated":"2017-07-18T01:38:18.584Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"POJ 3258 River Hopscotch","slug":"POJ3258","date":"2017-07-15T00:40:33.939Z","updated":"2017-07-18T02:39:20.408Z","comments":true,"path":"2017/07/15/POJ3258/","link":"","permalink":"http://yoursite.com/2017/07/15/POJ3258/","excerpt":"","text":"题意POJ 3258: River Hopscotch从N块石头中移除M块，使得间距最小值最大。 Code12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#include &lt;iostream&gt;#include &lt;algorithm&gt;#include &lt;cstdio&gt;using namespace std;//const int INF = 1000000010;int n, l, m;int d[50010];bool C(int x) &#123; int last = 0; for (int i = 1; i &lt; n - m; i++) &#123; int cur = last + 1; while (cur &lt; n &amp;&amp; d[cur] - d[last] &lt; x) &#123; cur++; &#125; if (cur == n )return false; last = cur; &#125; return true;&#125;void solve() &#123; sort(d, d + n ); int lb = 0, ub = l + 1; while (ub - lb &gt; 1) &#123; int mid = lb + ((ub - lb) &gt;&gt; 1); if (C(mid)) lb = mid; else ub = mid; //cout &lt;&lt; \"lb= \" &lt;&lt; lb &lt;&lt; \" ub=\" &lt;&lt; ub &lt;&lt; endl; &#125; cout &lt;&lt; lb &lt;&lt; endl;&#125;int main() &#123; //freopen(\"in.txt\", \"r\", stdin); cin &gt;&gt; l &gt;&gt; n &gt;&gt; m; for (int i = 1; i &lt;= n; i++) &#123; cin &gt;&gt; d[i]; &#125; d[0] = 0; //起点 d[n + 1] = l; //终点 n++; n++; solve();&#125;","categories":[{"name":"POJ","slug":"POJ","permalink":"http://yoursite.com/categories/POJ/"}],"tags":[{"name":"最大化最小值","slug":"最大化最小值","permalink":"http://yoursite.com/tags/最大化最小值/"},{"name":"二分法","slug":"二分法","permalink":"http://yoursite.com/tags/二分法/"},{"name":"贪心","slug":"贪心","permalink":"http://yoursite.com/tags/贪心/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-07-15T00:11:20.050Z","updated":"2017-07-15T00:11:20.050Z","comments":true,"path":"2017/07/15/hello-world/","link":"","permalink":"http://yoursite.com/2017/07/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}